syntax = "proto3";

package kvmessages ;

option go_package = "github.com/kvstore/kvmessages";

// The greeting service definition.
service KVSevice {
  // Sends a greeting
  rpc ping(PingRequest) returns (PingResponse) {}
  rpc Communicate(stream ServerMessage) returns (stream ServerMessage) {}
}

// The request message containing the user's name.
message PingRequest {
  int32 hello = 1;
  string hostname = 2;
  int32 port = 3;
}

// The response message containing the greetings
message PingResponse {
  int32 hello = 1;
}

message KeyValueMessage {
  string key = 1;
  string value = 2;
}

enum MessageType {
  PING = 0;
  PING_RESPONSE=1;
  KEY_VALUE = 2;
}

message ServerMessage {
  MessageType type = 1;
  oneof content {
    PingRequest ping = 2;
    PingResponse ping_response = 3;
    KeyValueMessage key_value = 4;
  }
}

message Member {
  string hostname = 1; // Hostname of the cluster member.
  int32 port = 2;      // Port of the cluster member.
}

message Cluster {
  repeated Member members = 1; // List of members in the cluster.
}

message ClusterInfoRequest {
  Cluster cluster = 1; // The cluster information being sent by the requester.
}

message ClusterInfoResponse {
  enum Status {
    OK = 0;          // The cluster was accepted.
    NEED_UPDATES = 1; // The cluster needs updates.
  }

  Status status = 1;          // Status of the response.
  Cluster add_members = 2;    // Members to be added, if any.
  Cluster remove_members = 3; // Members to be removed, if any.
}